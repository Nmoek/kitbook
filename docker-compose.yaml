version: "3"
services:
  mysql8:
    image: mysql:8.0
    restart: always
    command:
      - --default-authentication-plugin=mysql_native_password
      - --binlog-format=ROW
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./script/mysql/:/docker-entrypoint-initdb.d/
    ports:
      - "13316:3306"

  redis:
    image: redis:latest
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"

  mongoDB:
    image: "bitnami/mongodb:latest"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"

  etcd:
    image: "bitnami/etcd:latest"
    restart: always
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
    ports:
      - "2379:2379"

  kafka:
    image: 'bitnami/kafka:3.6.0'
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
#       允许自动创建 topic，线上千万不要开启
      - KAFKA_CREATE_TOPICS=kitbook_binlog:3:1
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  prometheus:
    image: prom/prometheus:v2.47.2
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - "--web.enable-remote-write-receiver"
      - "--config.file=/etc/prometheus/prometheus.yml"


  zipkin:
    #    用的是不支持 Kafka 之类的简化版本
    image: openzipkin/zipkin-slim:2.24
    ports:
      - '9411:9411'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms84m -Xmx512m"
    ports:
      - "9200:9200"

  logstash:
    image: docker.elastic.co/logstash/logstash:7.13.0
    volumes:
#      - ../logstash/config/:/usr/share/logstash/pipeline
#      - ../logstash/log/:/usr/share/logstash/logs
      - ./config/logstash/:/usr/share/logstash/pipeline
#      - ../logstash/log/:/usr/share/logstash/logs
    ports:
      - "5044:5044"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - il8n.locale=zn-CH

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.4
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - il8n.locale=zn-CH

  canal:
    image: canal/canal-server
    volumes:
      - ./script/canal/kitbook/instance.properties:/home/admin/canal-server/conf/kitbook/instance.properties
      - ./script/canal/canal.properties:/home/admin/canal-server/conf/canal.properties
    environment:
      - CANAL_IP=canal-server
      - CANAL_PORT=11111
      - CANAL_DESTINATIONS=example
    depends_on:
      - mysql8
      - kafka
    ports:
      - "11111:11111"
  grafana:
    image: grafana/grafana-enterprise:10.2.0
    ports:
      - 3000:3000

