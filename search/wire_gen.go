// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"kitbook/search/grpc"
	"kitbook/search/ioc"
	"kitbook/search/repository"
	"kitbook/search/repository/dao"
	"kitbook/search/service"
)

// Injectors from wire.go:

func InitApp() *App {
	client := ioc.InitES()
	userDao := dao.NewElasticSearchUserDao(client)
	userRepository := repository.NewUserSyncRepository(userDao)
	articleDao := dao.NewElasticSearchArticleDao(client)
	articleRepository := repository.NewArticleSyncRepository(articleDao)
	syncService := service.NewSyncService(userRepository, articleRepository)
	syncServiceServer := grpc.NewSyncServiceServer(syncService)
	searchService := service.NewSearchService(userRepository, articleRepository)
	searchServiceServer := grpc.NewSearchServiceServer(searchService)
	logger := ioc.InitLogger()
	server := ioc.InitGRpcServer(syncServiceServer, searchServiceServer, logger)
	app := &App{
		rpcServer: server,
	}
	return app
}

// wire.go:

var thirdPartySet = wire.NewSet(ioc.InitLogger, ioc.InitES)

var syncSvcSet = wire.NewSet(dao.NewElasticSearchUserDao, dao.NewElasticSearchArticleDao, repository.NewArticleSyncRepository, repository.NewUserSyncRepository, service.NewSyncService, service.NewSearchService)
